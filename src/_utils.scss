////////////////////////////////////////////////////////////////////////////////
// A collection of helper methods.
////////////////////////////////////////////////////////////////////////////////

@use 'sass:math';
@use 'config';

// Given the base and ratio defined in `config.font-size-scale()`, scales the
// font-size exponentially: font-size = base * (ratio ^ exponent). This can be
// used to create a proportionally increasing series of font-sizes. Headings
// smaller than the scale's start get the same value as the scale's start.
@function heading-font-size($heading-idx) {
  $scale-amount: math.max(config.font-size-scale('start') - $heading-idx, 0);
  @return scale-font-size($scale-amount);
}

// Given the base and ratio defined in `config.whitespace-scale()`, scales the
// whitespace exponentially: whitespace = base * (ratio ^ exponent). This can be
// used to create a proportionally increasing series of font-sizes. Headings
// smaller than the scale's start get the same value as the scale's start.
@function heading-whitespace-top($heading-idx) {
  $scale-amount: math.max(config.whitespace-scale('start') - $heading-idx, 0);
  @return scale-whitespace($scale-amount);
}

// Calculates the heading's bottom whitespace to the correct proportion, based
// on its top whitespace and font-size.
@function heading-whitespace-bottom($heading-idx) {
  $font-size: heading-font-size($heading-idx);
  $margin-top: heading-whitespace-top($heading-idx);
  @return ($margin-top * 1rem) / ($font-size * config.line-height());
}

// Given the base and ratio defined in `config.font-size-scale()`, scales the
// font-size exponentially: font-size = base * (ratio ^ exponent). This can be
// used to create a proportionally increasing series of font-sizes.
@function scale-font-size($exponent) {
  @if $exponent < 0 {
    @error 'Negative scaling is not supported.';
  }
  $start: 1rem;
  $base: config.font-size-scale('base');
  $ratio: config.font-size-scale('ratio');
  @return $start * $base * math.pow($ratio, $exponent);
}

// Given the base and ratio defined in `config.whitespace-scale()`, scales the
// whitespace exponentially: whitespace = base * (ratio ^ exponent). This can be
// used to create a proportionally increasing series of whitespaces.
@function scale-whitespace($exponent) {
  @if $exponent < 0 {
    @error 'Negative scaling is not supported.';
  }
  $start: config.whitespace();
  $base: config.whitespace-scale('base');
  $ratio: config.whitespace-scale('ratio');
  @return $start * $base * math.pow($ratio, $exponent);
}

// Whitespace is smaller when it's assigned to the margin of a non-text item
// (img, hr, etc.) than when it's assigned to that of text. This is because text
// has a line-height that adds whitespace to margins. So, for non-text items, we
// need to pad their margins with an additional 0.5rem to simulate line-height.
//
// The following styles result in the same amount of whitespace underneath each
// element:
//
//   ```
//   p {
//     margin-bottom: config.whitespace();
//   }
//
//   img {
//     margin-bottom: non-text-whitespace();
//   }
//   ```
@function non-text-whitespace() {
  @return 0.5rem + config.whitespace();
}
